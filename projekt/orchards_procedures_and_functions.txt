-- fruits package specification
CREATE OR REPLACE PACKAGE gen_orchards
IS
    PROCEDURE insert_orchard
        (p_name VARCHAR2, p_region VARCHAR2 DEFAULT 'Unknown');
    
    PROCEDURE update_orchard
        (p_id NUMBER,
        p_name VARCHAR2, p_region VARCHAR2);
    
    PROCEDURE delete_orchard
        (p_orchard_id NUMBER);
    
    FUNCTION get_orchard_name
        (p_orchard_id NUMBER)
        RETURN VARCHAR2;
        
    FUNCTION get_orchard_region
        (p_orchard_id NUMBER)
        RETURN VARCHAR2;
END;

-- fruits package body
CREATE OR REPLACE PACKAGE BODY gen_orchards
IS
    PROCEDURE insert_orchard
        (p_name VARCHAR2, p_region VARCHAR2 DEFAULT 'Unknown')
    IS
        v_next_id NUMBER;
    BEGIN
        SELECT MIN(orchard_id)+1 INTO v_next_id FROM 
            (SELECT orchard_id, LEAD(orchard_id) OVER (ORDER BY orchard_id)AS next_id FROM orchards)
            WHERE (next_id > orchard_id+1)
            OR (next_id IS NULL);
        INSERT INTO orchards
        VALUES(v_next_id, p_name, p_region);
        COMMIT;
        
        EXCEPTION
            WHEN OTHERS THEN
                dbms_output.put_line(SQLCODE);
                dbms_output.put_line(SQLERRM);
    END;
    
    PROCEDURE update_orchard
        (p_id NUMBER,
        p_name VARCHAR2, p_region VARCHAR2)
    IS
        v_orchard_name orchards.orchard_name%TYPE;
    BEGIN
        SELECT orchard_name INTO v_orchard_name
            FROM orchards WHERE orchard_id=p_id;
        
        UPDATE orchards SET orchard_name = p_name, region = p_region
            WHERE orchard_id = p_id;
        COMMIT;
        EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                dbms_output.put_line('No data found for orchard ID '||p_id);
            WHEN OTHERS THEN
                dbms_output.put_line(SQLCODE);
                dbms_output.put_line(SQLERRM);
    END;
    
    PROCEDURE delete_orchard
        (p_orchard_id NUMBER)
    IS
    BEGIN
        DELETE FROM orchards WHERE orchard_id=p_orchard_id;
        COMMIT;
        
        EXCEPTION
            WHEN OTHERS THEN
                dbms_output.put_line(SQLCODE);
                dbms_output.put_line(SQLERRM);
    END;
    
    FUNCTION get_orchard_name
        (p_orchard_id NUMBER)
    RETURN VARCHAR2
    IS
        v_name orchards.orchard_name%TYPE;
    BEGIN
        SELECT orchard_name INTO v_name FROM orchards
        WHERE orchard_id=p_orchard_id;
        RETURN v_name;
        
        EXCEPTION
            WHEN OTHERS THEN
                RETURN NULL;
    END;
    
    FUNCTION get_orchard_region
        (p_orchard_id NUMBER)
    RETURN VARCHAR2
    IS
        v_region orchards.region%TYPE;
    BEGIN
        SELECT region INTO v_region FROM orchards
        WHERE orchard_id=p_orchard_id;
        RETURN v_region;
        
        EXCEPTION
            WHEN OTHERS THEN
                RETURN NULL;
    END;
END;
--
EXECUTE gen_orchards.insert_orchard('test1');

SELECT * FROM orchards;

SELECT * FROM orchards_audit;

EXECUTE gen_orchards.update_orchard(3, 'testowa zmiana', 'Zielona gora');

SELECT * FROM orchards;

SELECT * FROM orchards_audit;

EXECUTE gen_orchards.delete_orchard(3);

SELECT * FROM orchards;

SELECT * FROM orchards_audit;

SELECT gen_orchards.get_orchard_name(2) FROM dual;

SELECT gen_orchards.get_orchard_region(2) FROM dual;